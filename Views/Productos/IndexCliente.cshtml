@model IEnumerable<prueba2maya.Models.Producto>

@{
    ViewData["Title"] = "Catálogo de Productos";
}

<div class="container my-5">
    <div class="text-center mb-4">
        <h1>Catálogo de Productos</h1>
        <p>Explora nuestra amplia gama de productos.</p>
    </div>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100 shadow-sm">
                    <img src="@item.ImagenUrl" class="card-img-top" alt="@item.NombreProducto" style="max-height: 200px; object-fit: cover;">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@item.NombreProducto</h5>
                        <p class="card-text">@item.Descripcion</p>
                        <p class="card-text text-primary fw-bold">Precio: @(item.Precio.HasValue ? item.Precio.Value.ToString("") : "No disponible")</p>

                        <form class="add-to-cart-form" method="post">
                            <input type="hidden" name="idProducto" value="@item.IdProducto" />
                            <button type="submit" class="btn btn-success btn-sm w-100">
                                <i class="bi bi-cart-plus"></i> Agregar al Carrito
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Mensaje para notificaciones -->
<div id="notification" class="alert alert-success" style="display: none; position: fixed; bottom: 10px; right: 10px; z-index: 1050;"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const forms = document.querySelectorAll(".add-to-cart-form");

        forms.forEach(form => {
            form.addEventListener("submit", async function (event) {
                event.preventDefault(); // Prevenir el envío del formulario

                const formData = new FormData(form);
                const idProducto = formData.get("idProducto");

                try {
                    const response = await fetch('/CarritoProductos/AddToCart', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    const data = await response.json();

                    // Mostrar el mensaje de acuerdo con la respuesta del servidor
                    if (data.success) {
                        showNotification(data.message, "success");
                    } else {
                        showNotification(data.message, "danger");
                    }
                } catch (error) {
                    showNotification("Error de conexión. Inténtalo nuevamente.", "danger");
                }
            });
        });

        function showNotification(message, type) {
            const notification = document.getElementById("notification");
            notification.textContent = message;
            notification.className = `alert alert-${type}`;
            notification.style.display = "block";

            setTimeout(() => {
                notification.style.display = "none";
            }, 3000);
        }
    });
</script>
